let LIB = "c";

#[lib = LIB]
pub extern let putchar = fn(char: int) -> int;

#[lib = LIB]
pub extern let getchar = fn() -> int;

#[lib = LIB]
pub extern let printf = fn(input: *u8, args...) -> int;

#[lib = LIB]
pub extern let sprintf_s = fn(buffer: *u8, sizeOfBuffer: uint, format: *u8, args...) -> int;

#[lib = LIB]
pub extern let strcpy = fn(dest: *u8, src: *u8) -> *u8;

#[lib = LIB]
pub extern let malloc = fn(size: uint) -> *i8;

#[lib = LIB]
pub extern let calloc = fn(nitems: uint, size: uint) -> *i8;

#[lib = LIB]
pub extern let realloc = fn(ptr: *i8, size: uint) -> *i8;

#[lib = LIB]
pub extern let free = fn(memblock: *i8);

#[lib = LIB]
pub extern let abs = fn(x: i32) -> i32;

#[lib = LIB]
pub extern let sinf = fn(arg: f32) -> f32;

#[lib = LIB]
pub extern let sin = fn(arg: f64) -> f64;

#[lib = LIB]
pub extern let cosf = fn(arg: f32) -> f32;

#[lib = LIB]
pub extern let cos = fn(arg: f64) -> f64;

#[lib = LIB]
pub extern let atan2f = fn(y: f32, x: f32) -> f32;

#[lib = LIB]
pub extern let atan2 = fn(y: f64, x: f64) -> f64;

#[lib = LIB]
pub extern let pow = fn(x: f64, y: f64) -> f64;

#[lib = LIB]
pub extern let srand = fn(seed: uint);

#[lib = LIB]
pub extern let rand = fn() -> uint;

#[lib = LIB]
pub extern let time = fn(some: *i8) -> uint;

#[lib = LIB]
pub extern let fork = fn() -> int;

#[lib = LIB]
pub extern let waitpid = fn(pid: int, status: *mut int, options: int) -> int;

#[lib = LIB]
pub extern let execl = fn(path: *u8, args...) -> int;

#[lib = LIB]
pub extern let abort = fn() -> never;

#[lib = LIB]
pub extern let exit = fn(status: int) -> never;