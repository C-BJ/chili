let * = import types

let kernel32 = "kernel32"

@lib(kernel32)
pub extern fn CreateProcessA(
    lpApplicationName: LPCSTR,
    lpCommandLine: LPSTR,
    lpProcessAttributes: LPSECURITY_ATTRIBUTES,
    lpThreadAttributes: LPSECURITY_ATTRIBUTES,
    bInheritHandles: BOOL,
    dwCreationFlags: DWORD,
    lpEnvironment: LPVOID,
    lpCurrentDirectory: LPCSTR,
    lpStartupInfo: LPSTARTUPINFO,
    lpProcessInformation: *mut PROCESS_INFORMATION,
) -> BOOL

@lib(kernel32)
pub extern fn WaitForSingleObject(hHandle: HANDLE, dwMilliseconds: DWORD) -> DWORD

@lib(kernel32)
pub extern fn CloseHandle(hObject: HANDLE) -> BOOL

@lib(kernel32)
pub extern fn GetLastError() -> DWORD