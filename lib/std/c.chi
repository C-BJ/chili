pub let extern "c" putchar = fn(char: int) -> int;
pub let extern "c" getchar = fn() -> int;

pub let extern "c" printf = fn(input: *u8, ..args) -> int;
pub let extern "c" sprintf_s = fn(buffer: *u8, sizeOfBuffer: uint, format: *u8, ..args) -> int;

pub let extern "c" strcpy = fn(dest: *u8, src: *u8) -> *u8;

pub let extern "c" malloc = fn(size: uint) -> *i8;
pub let extern "c" calloc = fn(nitems: uint, size: uint) -> *i8;
pub let extern "c" realloc = fn(ptr: *i8, size: uint) -> *i8;
pub let extern "c" free = fn(memblock: *i8);

pub let extern "c" abs = fn(x: i32) -> i32;

pub let extern "c" sinf = fn(arg: f32) -> f32;
pub let extern "c" sin = fn(arg: f64) -> f64;

pub let extern "c" cosf = fn(arg: f32) -> f32;
pub let extern "c" cos = fn(arg: f64) -> f64;

pub let extern "c" atan2f = fn(y: f32, x: f32) -> f32;
pub let extern "c" atan2 = fn(y: f64, x: f64) -> f64;

pub let extern "c" pow = fn(x: f64, y: f64) -> f64;

pub let extern "c" srand = fn(seed: uint);
pub let extern "c" rand = fn() -> uint;
pub let extern "c" time = fn(some: *i8) -> uint;

pub let extern "c" execl = fn(path: *u8, ..args) -> int;

pub let extern "c" abort = fn() -> never;
pub let extern "c" exit = fn(status: int) -> never;