pub let { start_workspace } = import("std/intrinsics");
let { execl } = import("std/c");

pub type Workspace = struct {
    name: str,
    build_options: BuildOptions
};

pub type BuildOptions = struct {
    input_file: str,
    output_file: str,
    target: BuildTarget,
    optimization_level: OptimizationLevel,
};

// TODO: turn into enum
pub type BuildTarget = u8;
pub let BuildTarget_auto: BuildTarget = 0;
pub let BuildTarget_linux: BuildTarget = 1;
pub let BuildTarget_windows: BuildTarget = 2;

// TODO: turn into enum
pub type OptimizationLevel = u8;
pub let OptimizationLevel_debug: OptimizationLevel = 0;
pub let OptimizationLevel_release: OptimizationLevel = 1;

pub let run_output_file = fn(output_file: str) {
    execl(output_file.data, 0);
};