let cstr = type *u8

foreign "system:libucrt" {
    let printf = fn(input -> cstr, ..) -> i64;
    let srand = fn(seed -> int);
    let rand = fn() -> int;
    let time = fn(some -> *()) -> int;
}

let Items = type [20] int;

let main = fn() {
    let items = get_random_array();
    print_array(&items);

    for i = 0..items.len - 1 {
        for j = i + 1..items.len - 1 {
            if items[i] > items[j] {
                let temp = items[i];
                items[i] = items[j];
                items[j] = temp;
            }
        }
    }

    print_array(&items);
}

let get_random_array = fn() -> Items {
    srand(time(nil));
    let array -> Items;

    for &array {
        *it = rand() % 100;
    }

    array
}

let print_array = fn(array -> *Items) {
    printf("[\0.data);

    for *array {
        printf("%d\0.data, it);
        if it_index != array.len - 1 {
            printf(", \0.data);
        }
    }

    printf("]\n.data);
}