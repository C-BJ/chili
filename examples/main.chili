use c.{ puts, printf }

foreign("./test_dll/test.lib") {
    let print_number = fn(cb: fn(n: i32) -> i32)
    let call_puts = fn(cb: fn(s: [*]u8) -> int)
}

type Person = { name: str, age: i64 }
type PersonTuple = (str, i64)

let main = fn() {
    printf("Hello\n".data)
    print_number(fn { it * 2 })
    call_puts(puts)
    foo(.{ name: "Ron\0", age: 26 })
    bar(("Rewon\0", 46))
    printf("Goodbye\n".data)
}

let foo = fn({ name, age }: Person) {
    printf("name = %s, age = %d\n".data, name.data, age)
}

let bar = fn((name, age): PersonTuple) {
    printf("name = %s, age = %d\n".data, name.data, age)
}

@run(main())