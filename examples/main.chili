let main = fn {
    type Foo = { a: _ }
    let foo = Foo { a: 1 }
    let foo = Foo { a: 1 }
    let foo = Foo { a: 1 }
    let foo = Foo { a: 1 }
    let foo = Foo { a: 1 }
    let foo = Foo { a: 1 }
    let foo = Foo { a: 1 }
    let foo = Foo { a: 1 }
    let foo = Foo { a: 1 }
    let foo = Foo { a: 1 }
    let foo = Foo { a: 1 }
    let foo = Foo { a: 1 }
    let foo = Foo { a: 1 }
    let foo = Foo { a: 1 }
    let foo = Foo { a: 1 }
    let foo = Foo { a: 1 }
    let foo = Foo { a: 1 }
    let foo = Foo { a: 1 }
    let foo = Foo { a: 1 }
    let foo = Foo { a: 1 }
    let foo = Foo { a: 1 }
    let foo = Foo { a: 1 }
    let foo = Foo { a: 1 }
    let foo = Foo { a: 1 }
    let foo = Foo { a: 1 }
    let foo = Foo { a: 1 }
    let foo = Foo { a: 1 }
    let foo = Foo { a: 1 }
    let foo = Foo { a: 1 }
    let foo = Foo { a: 1 }
    let foo = Foo { a: 1 }
    let foo = Foo { a: 1 }
    let foo = Foo { a: 1 }
    let foo = Foo { a: 1 }
    let foo = Foo { a: 1 }
}