use raylib.?
use c.?

let width: i32 = 300
let height: i32 = 200
let max_droplet_interval: i32 = 1
let bg_color = blue

let main = fn() {
	srand(time(0 as uint as _))

	let mut prev = calloc(width * height, @size_of(f64)) as *mut f64 as [*mut]f64
  	defer free(prev as *f64 as _)
	let mut curr = calloc(width * height, @size_of(f64)) as *mut f64 as [*mut]f64
    defer free(curr as *f64 as _)

	// let mut frames = rand() % max_droplet_interval

	InitWindow(width, height, "chili language - test - water ripples\0".data)
	SetTargetFPS(60)

	while !WindowShouldClose() {
		BeginDrawing()

		ClearBackground(bg_color)

		// if frames == 0 {
		// 	droplet(prev, (rand() % width) as _, (rand() % height) as _)
		// 	frames = rand() % max_droplet_interval
		// } else {
		// 	frames -= 1
		// }

		if IsMouseButtonDown(0) {
            droplet(prev, GetMouseX(), GetMouseY())
		}

		for x in 1..width - 2 {
			for y in 1..height - 2 {
				let mut value = (
					(prev[(x - 1) + y * width] +
					prev[(x + 1) + y * width] +
					prev[x + (y - 1) * width] +
					prev[x + (y + 1) * width]) / 2 - 
					curr[x + y * width]
				)
				
				value *= frand(0.75, 0.99)

				let color = if value == 0 {
					bg_color
				} else {
					let value_u8 = value as u8
					Color {
						r: value_u8,
						g: value_u8,
						b: value_u8,
						a: value_u8//(value_u8 as f64 * 0.75) as u8,
					}
				}

				DrawRectangle(x, y, 1, 1, color)
				// DrawPixel(x, y, color)

                curr[x + y * width] = value
			}
		}

		let temp = prev
		prev = curr
		curr = temp

		DrawFPS(10, 10)

		EndDrawing()
	}

	CloseWindow()
}

let droplet = fn(buf: [*mut]f64, x: i32, y: i32) {
	if  x >= 1 &&
		x <= width - 1 &&
		y >= 1 &&
		y <= height - 1 {
		buf[x + y * width] = 255
	}
}

let frand = fn(min: f64, max: f64) -> f64 {
    let scale = (rand() as f64) / (RAND_MAX as f64)
    min + scale * (max - min)
}

let RAND_MAX: uint = 32767

@run(main())